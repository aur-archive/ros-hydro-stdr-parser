From 591bb3a3b46ef28ef412c96dce32abf001669b94 Mon Sep 17 00:00:00 2001
From: Scott K Logan <logans@cottsay.net>
Date: Mon, 24 Mar 2014 20:51:43 -0600
Subject: [PATCH] More support for YAML-CPP 0.5+

The new API doesn't have a method for mapping nodes to line numbers, so line
numbers won't be correct. The rest of the features should work.
---
 .../include/stdr_parser/stdr_parser_tools.h        | 13 ++++++++++++
 stdr_parser/src/stdr_yaml_parser.cpp               | 24 ++++++++++++++++++++++
 2 files changed, 37 insertions(+)

diff --git a/include/stdr_parser/stdr_parser_tools.h b/include/stdr_parser/stdr_parser_tools.h
index 66c9d2d..3d314e0 100644
--- a/include/stdr_parser/stdr_parser_tools.h
+++ b/include/stdr_parser/stdr_parser_tools.h
@@ -36,6 +36,19 @@
 #include <tinyxml.h>
 #include "yaml-cpp/yaml.h"
 
+#ifdef HAVE_NEW_YAMLCPP
+namespace YAML
+{
+  // The >> operator disappeared in yaml-cpp 0.5, so this function is
+  // added to provide support for code written under the yaml-cpp 0.3 API.
+  template<typename T>
+  void operator >> (const YAML::Node& node, T& i)
+  {
+    i = node.as<T>();
+  }
+}
+#endif
+
 #include "stdr_msgs/RobotMsg.h"
 #include "geometry_msgs/Pose2D.h"
 #include "geometry_msgs/Point.h"
diff --git a/src/stdr_yaml_parser.cpp b/src/stdr_yaml_parser.cpp
index 56612bf..273b44e 100644
--- a/src/stdr_yaml_parser.cpp
+++ b/src/stdr_yaml_parser.cpp
@@ -55,7 +55,9 @@ namespace stdr_parser
     #endif
     
     base_node->file_origin = file_name;
+#ifndef HAVE_NEW_YAMLCPP
     base_node->file_row = doc.GetMark().line;
+#endif
     
     parseLow(doc,base_node);
   }
@@ -75,7 +77,9 @@ namespace stdr_parser
       node >> s;
       new_node->value = s;
       new_node->file_origin = n->file_origin;
+#ifndef HAVE_NEW_YAMLCPP
       new_node->file_row = node.GetMark().line;
+#endif
       n->elements.push_back(new_node);
     }
     else if(node.Type() == YAML::NodeType::Sequence)
@@ -88,18 +92,32 @@ namespace stdr_parser
     else if(node.Type() == YAML::NodeType::Map)
     {
       std::string s;
+#ifdef HAVE_NEW_YAMLCPP
+      for(YAML::const_iterator it = node.begin() ; it != node.end() ; it++) 
+#else
       for(YAML::Iterator it = node.begin() ; it != node.end() ; it++) 
+#endif
       {
         Node* new_node = new Node();
+#ifdef HAVE_NEW_YAMLCPP
+        it->first >> s;
+#else
         it.first() >> s;
+#endif
         new_node->tag = s;
         new_node->file_origin = n->file_origin;
+#ifndef HAVE_NEW_YAMLCPP
         new_node->file_row = node.GetMark().line;
+#endif
         n->elements.push_back(new_node);
         if(s == "filename")
         {
           std::string file_name;
+#ifdef HAVE_NEW_YAMLCPP
+          it->second >> file_name;
+#else
           it.second() >> file_name;
+#endif
           std::string path = ros::package::getPath("stdr_resources") + 
               std::string("/resources/") + file_name;
           std::ifstream fin(path.c_str());
@@ -115,13 +133,19 @@ namespace stdr_parser
             parser.GetNextDocument(doc);
           #endif
           new_node->file_origin = file_name;
+#ifndef HAVE_NEW_YAMLCPP
           new_node->file_row = doc.GetMark().line;
+#endif
           
           parseLow(doc,new_node);
         }
         else
         {
+#ifdef HAVE_NEW_YAMLCPP
+          parseLow(it->second,new_node);
+#else
           parseLow(it.second(),new_node);
+#endif
         }
       }
     }
-- 
1.9.3

